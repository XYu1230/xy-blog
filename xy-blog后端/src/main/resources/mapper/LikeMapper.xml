<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stdu.mapper.LikeMapper">
    
    <resultMap id="BaseResultMap" type="com.stdu.entity.Like">
        <id column="id" property="id" />
        <result column="blog_id" property="blogId" />
        <result column="user_id" property="userId" />
        <result column="create_time" property="createTime" />
    </resultMap>
    
    <sql id="Base_Column_List">
        id, blog_id, user_id, create_time
    </sql>
    
    <select id="findByBlogIdAndUserId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM likes
        WHERE blog_id = #{blogId} AND user_id = #{userId}
    </select>
    
    <select id="findByBlogId" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM likes
        WHERE blog_id = #{blogId}
    </select>
    
    <select id="countByBlogId" resultType="int">
        SELECT COUNT(*)
        FROM likes
        WHERE blog_id = #{blogId}
    </select>
    
    <insert id="insert" parameterType="com.stdu.entity.Like" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO likes (blog_id, user_id, create_time)
        VALUES (#{blogId}, #{userId}, #{createTime})
    </insert>
    
    <delete id="deleteByBlogIdAndUserId">
        DELETE FROM likes WHERE blog_id = #{blogId} AND user_id = #{userId}
    </delete>
    
    <delete id="deleteByBlogId">
        DELETE FROM likes WHERE blog_id = #{blogId}
    </delete>
</mapper> 